package com.yidu.sevensecondmall.fragments;import android.content.Intent;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.example.zhouwei.library.CustomPopWindow;import com.se7en.utils.SystemUtil;import com.yidu.sevensecondmall.Activity.Distribution.DistributionNewActivity;import com.yidu.sevensecondmall.Activity.Login.LoginActivity;import com.yidu.sevensecondmall.Activity.Order.FeeShoppingActivity;import com.yidu.sevensecondmall.Activity.Order.OrderExActivity;import com.yidu.sevensecondmall.Activity.UserCenter.CollectionActivity;import com.yidu.sevensecondmall.Activity.UserCenter.GiftProgressActivity;import com.yidu.sevensecondmall.Activity.UserCenter.HelperActivity;import com.yidu.sevensecondmall.Activity.UserCenter.IndentActivity;import com.yidu.sevensecondmall.Activity.UserCenter.InvitedActivity;import com.yidu.sevensecondmall.Activity.UserCenter.MessageActivity;import com.yidu.sevensecondmall.Activity.UserCenter.RechargeGameActivity;import com.yidu.sevensecondmall.Activity.UserCenter.ShopApplyActivity;import com.yidu.sevensecondmall.Activity.UserCenter.WalletActivity;import com.yidu.sevensecondmall.Activity.UserCenter.allSettingActivity;import com.yidu.sevensecondmall.DAO.UserDAO;import com.yidu.sevensecondmall.R;import com.yidu.sevensecondmall.bean.User.UserBean;import com.yidu.sevensecondmall.i.BaseCallBack;import com.yidu.sevensecondmall.i.IEventTag;import com.yidu.sevensecondmall.i.LoginEvent;import com.yidu.sevensecondmall.networks.HttpApi;import com.yidu.sevensecondmall.utils.LoginUtils;import com.yidu.sevensecondmall.views.widget.GlideCircleTransform;import com.yidu.sevensecondmall.views.widget.iconfonts.IconFontTextView;import org.greenrobot.eventbus.EventBus;import org.greenrobot.eventbus.Subscribe;import org.greenrobot.eventbus.ThreadMode;import java.util.ArrayList;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;import static com.yidu.sevensecondmall.R.id.rl_all_order;/** * Created by Administrator on 2017/5/6 0006. */public class MyFragment extends BaseFragment {    @BindView(R.id.iv_head)    ImageView ivHead;    @BindView(R.id.tv_name)    TextView tvName;    @BindView(R.id.tv_vip)    TextView tvVip;    @BindView(R.id.tv_authentication)    TextView tvAuthentication;    @BindView(R.id.tv_business)    TextView tvBusiness;    @BindView(R.id.tv_partner)    TextView tvPartner;    @BindView(R.id.ll_tip)    LinearLayout llTip;    @BindView(R.id.if_tv)    ImageView ifTv;    @BindView(R.id.tv_1)    TextView tv1;    @BindView(R.id.tv_score)    TextView tvScore;    @BindView(R.id.rl_head)    RelativeLayout rlHead;//    @BindView(R.id.if_tv_more)//    IconFontTextView ifTvMore;//    @BindView(R.id.rl_order)//    RelativeLayout rlOrder;    @BindView(R.id.if_tv_wait_for_pay)    IconFontTextView ifTvWaitForPay;    @BindView(R.id.tv_bubble_wait_for_pay)    TextView tvBubbleWaitForPay;    @BindView(R.id.tv_wait_for_pay_more)    TextView tvWaitForPayMore;    @BindView(R.id.rl_wait_for_pay)    RelativeLayout rlWaitForPay;    @BindView(R.id.if_tv_payed)    IconFontTextView ifTvPayed;    @BindView(R.id.tv_bubble_payed)    TextView tvBubblePayed;    @BindView(R.id.tv_payed_more)    TextView tvPayedMore;    @BindView(R.id.rl_payed)    RelativeLayout rlPayed;    @BindView(R.id.if_tv_wait_for_get)    IconFontTextView ifTvWaitForGet;    @BindView(R.id.tv_bubble_wait_for_get)    TextView tvBubbleWaitForGet;    @BindView(R.id.tv_wait_for_get_more)    TextView tvWaitForGetMore;    @BindView(R.id.rl_wait_for_get)    RelativeLayout rlWaitForGet;    @BindView(R.id.if_tv_finished)    IconFontTextView ifTvFinished;    @BindView(R.id.tv_bubble_finished)    TextView tvBubbleFinished;    @BindView(R.id.tv_finished_more)    TextView tvFinishedMore;    @BindView(R.id.rl_finished)    RelativeLayout rlFinished;    @BindView(R.id.ll_order)    LinearLayout llOrder;    @BindView(R.id.tv_wait_for_pay)    TextView tvWaitForPay;    @BindView(R.id.tv_payed)    TextView tvPayed;    @BindView(R.id.tv_wait_for_get)    TextView tvWaitForGet;    @BindView(R.id.tv_finished)    TextView tvFinished;    @BindView(R.id.ll_order_str)    LinearLayout llOrderStr;    @BindView(R.id.if_tv_free_order)    IconFontTextView ifTvFreeOrder;    @BindView(R.id.tv_bubble_free_order)    TextView tvBubbleFreeOrder;    @BindView(R.id.tv_free_order_more)    TextView tvFreeOrderMore;    @BindView(R.id.rl_free_order)    RelativeLayout rlFreeOrder;    @BindView(R.id.if_tv_invited)    IconFontTextView ifTvInvited;    @BindView(R.id.tv_bubble_invited)    TextView tvBubbleInvited;    @BindView(R.id.tv_invited_more)    TextView tvInvitedMore;    @BindView(R.id.rl_invited)    RelativeLayout rlInvited;    @BindView(R.id.if_tv_up_lv)    IconFontTextView ifTvUpLv;    @BindView(R.id.tv_bubble_up_lv)    TextView tvBubbleUpLv;    @BindView(R.id.tv_up_lv_more)    TextView tvUpLvMore;    @BindView(R.id.rl_up_lv)    RelativeLayout rlUpLv;    @BindView(R.id.if_tv_join_shop)    IconFontTextView ifTvJoinShop;    @BindView(R.id.tv_bubble_join_shop)    TextView tvBubbleJoinShop;    @BindView(R.id.tv_join_shop_more)    TextView tvJoinShopMore;    @BindView(R.id.rl_join_shop)    RelativeLayout rlJoinShop;    @BindView(R.id.tv_free)    TextView tvFree;    @BindView(R.id.tv_invited)    TextView tvInvited;    @BindView(R.id.tv_up_lv)    TextView tvUpLv;    @BindView(R.id.tv_join_shop)    TextView tvJoinShop;    @BindView(R.id.rl_free)    RelativeLayout rlFree;//    @BindView(R.id.rl_collect)//    RelativeLayout rlCollect;    @BindView(R.id.rl_wallet)    RelativeLayout rlWallet;    @BindView(R.id.rl_service)    RelativeLayout rlService;    @BindView(R.id.rl_logout)    RelativeLayout rlLogout;    @BindView(R.id.rl_recharge_game)    RelativeLayout rl_recharge_game;    private UserBean bean;    private int level = 2;    public int id;    private ArrayList<TextView> bubbleList = new ArrayList<>();    private ArrayList<TextView> moreList = new ArrayList<>();    private ArrayList<TextView> iconList = new ArrayList<>();    private static final String TAG = "MyFragment";    public MyFragment() {//        EventBus.getDefault().register(this);    }    @Override    protected int setViewId() {        return R.layout.fragment_my;    }    @Override    protected void findViews(View view) {        ButterKnife.bind(this, view);//        bubbleList.add(tvBubbleMsg);        bubbleList.add(tvBubbleWaitForPay);        bubbleList.add(tvBubblePayed);        bubbleList.add(tvBubbleWaitForGet);        bubbleList.add(tvBubbleFinished);//        moreList.add(tvMsgMore);        moreList.add(tvWaitForPayMore);        moreList.add(tvPayedMore);        moreList.add(tvWaitForGetMore);        moreList.add(tvFinishedMore);        iconList.add(tvVip);        iconList.add(tvAuthentication);        iconList.add(tvBusiness);        iconList.add(tvPartner);    }    @Override    protected void initEvent() {    }    @Override    protected void init() {    }    @Override    protected void loadData() {    }    @Override    public void onStart() {        if (LoginUtils.isLogin()) {            setUserInfo();        } else {            setLogoutStatus();            setLogoutStatusBubble();        }        super.onStart();    }    @OnClick({R.id.iv_head, R.id.tv_name,//            R.id.rl_order,            R.id.rl_wait_for_pay, R.id.rl_payed, R.id.rl_wait_for_get, R.id.rl_finished,            R.id.tv_wait_for_pay, R.id.tv_payed, R.id.tv_wait_for_get, R.id.tv_finished,            R.id.rl_free_order, R.id.rl_invited, R.id.rl_up_lv, R.id.rl_join_shop,            R.id.tv_free, R.id.tv_invited, R.id.tv_up_lv, R.id.tv_join_shop,//            R.id.rl_collect,            R.id.rl_wallet, R.id.rl_service,R.id.rl_all_order,            R.id.rl_my_collect,            R.id.if_tv_message, R.id.if_tv_setting ,R.id.rl_recharge_game    })    public void onClick(View view) {        Intent intent;        if (LoginUtils.isLogin() || view.getId() == R.id.rl_logout) {            switch (view.getId()) {                //head-start                case R.id.if_tv_message:                    intent = new Intent(getActivity(), MessageActivity.class);                    startActivity(intent);                    break;                case R.id.if_tv_setting:                    intent = new Intent(getActivity(), allSettingActivity.class);                    startActivity(intent);                    break;                case R.id.iv_head:                case R.id.tv_name:                    if (!LoginUtils.isLogin()) {                        intent = new Intent(getActivity(), LoginActivity.class);                        startActivity(intent);                    } else {                        intent = new Intent(getActivity(), allSettingActivity.class);                        startActivity(intent);                    }                    break;                //head-end                //order-start//                case R.id.rl_order:                case rl_all_order:                    intent = new Intent(getActivity(), OrderExActivity.class);                    startActivity(intent);                    break;                case R.id.rl_wait_for_pay:                case R.id.tv_wait_for_pay:                    intent = new Intent(getActivity(), OrderExActivity.class);                    intent.putExtra("clickIndex", 1);                    startActivity(intent);                    break;                case R.id.rl_payed:                case R.id.tv_payed:                    intent = new Intent(getActivity(), OrderExActivity.class);                    intent.putExtra("clickIndex", 2);                    startActivity(intent);                    break;                case R.id.rl_wait_for_get:                case R.id.tv_wait_for_get:                    intent = new Intent(getActivity(), OrderExActivity.class);                    intent.putExtra("clickIndex", 3);                    startActivity(intent);                    break;                case R.id.rl_finished:                case R.id.tv_finished:                    intent = new Intent(getActivity(), OrderExActivity.class);                    intent.putExtra("clickIndex", 4);                    startActivity(intent);                    break;                case R.id.rl_free_order:                case R.id.tv_free://                    intent = new Intent(getActivity(), FeeShoppingActivity.class);                    intent = new Intent(getActivity(), GiftProgressActivity.class);                    startActivity(intent);                    break;                //order-end                case R.id.rl_join_shop:                case R.id.tv_join_shop:                    UserDAO.getUserInfo(new BaseCallBack() {                        @Override                        public void success(Object data) {                            if (data != null) {                                UserBean bean = (UserBean) data;                                String is_authentication = bean.getIs_authentication();                                if (is_authentication.equals("0")) {                                    showPopupWindow();                                } else {                                    String business_apply_status = bean.getBusiness_apply_status();                                    if ("notapplied".equals(business_apply_status)) {                                        Intent intent = new Intent(getActivity(), ShopApplyActivity.class);                                        intent.putExtra("name", bean.getRealname());                                        startActivity(intent);                                    } else {                                        switch (business_apply_status) {                                            case "auditing":                                                business_apply_status = "审核中";                                                break;                                            case "passed":                                                business_apply_status = "已通过";                                                break;                                            case "refuse":                                                business_apply_status = "已被拒绝";                                                break;                                        }                                        showShortToast("您的申请" + business_apply_status);                                    }                                }                            }                        }                        @Override                        public void failed(int errorCode, Object data) {                            showShortToast(data + "");                        }                    });                    break;                case R.id.rl_up_lv:                case R.id.tv_up_lv:                    intent = new Intent(getActivity(), DistributionNewActivity.class);                    Log.e(TAG, "onClick: " + bean.getUser_id());                    intent.putExtra("id", bean.getUser_id());//                        intent.putExtra("level", level);                    startActivity(intent);                    break;                case R.id.rl_invited:                case R.id.tv_invited:                    intent = new Intent(getActivity(), InvitedActivity.class);                    startActivity(intent);                    break;//                case R.id.rl_collect:                case R.id.rl_my_collect:                    intent = new Intent(getActivity(), CollectionActivity.class);                    startActivity(intent);                    break;                case R.id.rl_wallet:                    intent = new Intent(getActivity(), WalletActivity.class);                    startActivity(intent);                    break;                case R.id.rl_service:                    intent = new Intent(getActivity(), HelperActivity.class);                    startActivity(intent);                    break;                case R.id.rl_recharge_game:                    intent = new Intent(getActivity(),RechargeGameActivity.class);                    startActivity(intent);                    break;            }        } else {            Intent login = new Intent(getActivity(), LoginActivity.class);            startActivity(login);        }    }    CustomPopWindow popupWindow;    private void showPopupWindow() {        View contentView = LayoutInflater.from(getActivity()).inflate(R.layout.pop_window_indentification, null);        //处理popWindow 显示内容        handleLogic(contentView);        popupWindow = new CustomPopWindow.PopupWindowBuilder(getActivity())                .setView(contentView)//显示的布局，还可以通过设置一个View                .size(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)//显示大小,默认包裹内容                .setFocusable(true)//是否获取焦点，默认为ture                .setOutsideTouchable(true)//是否PopupWindow 以外触摸dissmiss                .enableBackgroundDark(true) //弹出popWindow时，背景是否变暗                .setBgDarkAlpha(0.5f) // 控制亮度                .create()//创建PopupWindow                .showAtLocation(ivHead, Gravity.CENTER, 0, 0);//显示PopupWindow    }    /**     * 处理弹出显示内容、点击事件等逻辑     *     * @param contentView     */    private void handleLogic(View contentView) {        contentView.findViewById(R.id.tv_next).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(getActivity(), IndentActivity.class);                getActivity().startActivity(intent);                popupWindow.dissmiss();            }        });    }    @Subscribe(threadMode = ThreadMode.MAIN)    public void handler(LoginEvent event) {        switch (event.founctionTag) {            //刷新头像，刷新侧滑栏            case IEventTag.REFRESHHEAH:                if (!MyFragment.this.isAdded()) return;                if (LoginUtils.isLogin()) {                    setUserInfo();                } else {                    setLogoutStatusBubble();                }                break;            case IEventTag.AUTOLOGIN:                //自动登录                break;            case IEventTag.LOGINOUT:                if (LoginUtils.isLogin()) {//主动退出登录                    UserDAO.LoginOut(new BaseCallBack() {                        @Override                        public void success(Object data) {                            setLogoutStatus();                            setLogoutStatusBubble();                            LoginUtils.setUsername("");                            LoginUtils.setPassword("");                            LoginUtils.setLoginOpenid("");//                            SystemUtil.setSharedString("username", "");//                            SystemUtil.setSharedString("password", "");//                            SystemUtil.setSharedString("openid", "");                        }                        @Override                        public void failed(int errorCode, Object data) {                            if (errorCode == 1006 || errorCode == 1005) {                                setLogoutStatus();                                setLogoutStatusBubble();                                SystemUtil.setSharedString("username", "");                                SystemUtil.setSharedString("password", "");                                SystemUtil.setSharedString("openid", "");                            } else {                                Toast.makeText(getActivity(), "" + data, Toast.LENGTH_SHORT).show();                            }                        }                    });                } else {//被挤下线                    setLogoutStatus();                    setLogoutStatusBubble();                    SystemUtil.setSharedString("username", "");                    SystemUtil.setSharedString("password", "");                    SystemUtil.setSharedString("openid", "");                }                break;        }    }    public void setUserInfo() {        if (LoginUtils.isLogin()) {            UserDAO.getUserInfo(                    new BaseCallBack() {                        @Override                        public void success(Object data) {                            if (data != null) {                                bean = (UserBean) data;                                Glide.with(MyFragment.this)                                        .load(bean.getHead_pic() == null ? "" : HttpApi.getFullImageUrl(bean.getHead_pic()) + "")                                        .placeholder(R.drawable.star)                                        .transform(new GlideCircleTransform(getActivity()))                                        .into(ivHead);                                tvName.setText(bean.getNickname());                                SystemUtil.setSharedString("nickName", bean.getNickname());                                tvScore.setText(bean.getRebate_points());                                LoginUtils.setMobile(bean.getMobile() + "");                                int waitPay = bean.getWaitPay();                                int waitSend = bean.getWaitSend();                                int waitReceive = bean.getWaitReceive();                                int waitComment = bean.getWaitComment();                                setBubble(waitPay, 0);                                setBubble(waitSend, 1);                                setBubble(waitReceive, 2);                                setBubble(waitComment, 3);                                UserBean.icon icon = bean.getIcon();                                setIcon(icon.isPartner(), 0);                                setIcon(icon.isAuthentication(), 1);                                setIcon(icon.isBusiness(), 2);                                setIcon(icon.isVip(), 3);                                if (bean.getMobile()==null || "".equals(bean.getMobile())){                                    EventBus.getDefault().post(new LoginEvent(IEventTag.LOGINOUT));                                }                            }//                            level = Integer.parseInt(bean.getNew_level());//                            if (level == 3) {//                                tvUpLv.setText("VIP专区");//                            }                            id = bean.getUser_id();                            LoginUtils.setUserId(String.valueOf(bean.getUser_id()));                        }                        @Override                        public void failed(int errorCode, Object data) {                            if (errorCode == 1006 || errorCode == 1005) {                                setLogoutStatus();                                setLogoutStatusBubble();                            } else {                                Toast.makeText(getActivity(), "" + data, Toast.LENGTH_SHORT).show();                            }                        }                    }            );            if (LoginUtils.isLogin()) {//                UserDAO.getMessageListInfo(new BaseCallBack() {//                    @Override//                    public void success(Object data) {//                        MessageListInfo info = (MessageListInfo) data;//                        setBubble(info.getCount(), 0);//                    }////                    @Override//                    public void failed(int errorCode, Object data) {//                        Log.e(TAG, "failed: errorCode" + errorCode);//                        if (errorCode != 1006 && errorCode != 1005) {//                            ToastUtil.showToast(getActivity(), data + "");//                        }//                    }//                });            }        }    }    @Override    public void onDestroyView() {        super.onDestroyView();    }    private void setBubble(int value, int position) {        if (value == 0) {            bubbleList.get(position).setVisibility(View.GONE);            moreList.get(position).setVisibility(View.GONE);        } else {            bubbleList.get(position).setVisibility(View.VISIBLE);            if (value > 99) {                bubbleList.get(position).setText("99");                moreList.get(position).setVisibility(View.VISIBLE);            } else {                bubbleList.get(position).setText(getBubbleValue(value));                moreList.get(position).setVisibility(View.GONE);            }        }    }    private String getBubbleValue(int value) {        return value + "";    }    private void setIcon(boolean b, int position) {        if (b) {            iconList.get(position).setVisibility(View.VISIBLE);        } else {            iconList.get(position).setVisibility(View.GONE);        }    }    private void setLogoutStatusBubble() {        for (int i = 0; i < 4; i++) {            setBubble(0, i);        }        for (int i = 0; i < 4; i++) {            setIcon(false, i);        }    }    private void setLogoutStatus() {        LoginUtils.setIsLogin(false);        LoginUtils.setToken("");        Glide.with(getActivity())                .load(R.drawable.default_loading_pic)                .transform(new GlideCircleTransform(getActivity()))                .into(ivHead);        tvName.setText("点击登录");        tvScore.setText("0");//        tvUpLv.setText("升级VIP会员");        SystemUtil.setSharedString("nickName", "");    }}